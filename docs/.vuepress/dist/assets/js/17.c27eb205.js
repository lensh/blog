(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{431:function(s,t,a){"use strict";a.r(t);var n=a(62),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"js性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js性能优化"}},[s._v("#")]),s._v(" JS性能优化")]),s._v(" "),a("h2",{attrs:{id:"内存管理与垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存管理与垃圾回收"}},[s._v("#")]),s._v(" 内存管理与垃圾回收")]),s._v(" "),a("h3",{attrs:{id:"内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[s._v("#")]),s._v(" 内存管理")]),s._v(" "),a("ul",[a("li",[s._v("内存：由可读写单元组成，表示一片可操作空间。")]),s._v(" "),a("li",[s._v("管理：人为地去操作一片空间的申请、使用和释放。")]),s._v(" "),a("li",[s._v("内存管理：开发者主动申请空间、使用空间、释放空间。")])]),s._v(" "),a("p",[s._v("JS中内存管理:")]),s._v(" "),a("ul",[a("li",[s._v("申请内存空间")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("使用内存空间")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("释放内存空间")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[s._v("#")]),s._v(" 垃圾回收")]),s._v(" "),a("p",[s._v("JS垃圾：JS中内存管理是自动的，每次创建数组对象的时候，就会自动分配内存空间，后续程序代码执行过程中，如果存在引用关系，且无法找到被引用的对象的时候，那就是垃圾。")]),s._v(" "),a("ul",[a("li",[s._v("对象不再被引用的时候就是垃圾")]),s._v(" "),a("li",[s._v("对象不能被根上访问到时是垃圾")])]),s._v(" "),a("p",[s._v("可达对象：可以访问到的对象就是可达对象")]),s._v(" "),a("ul",[a("li",[s._v("可达的标准就是从根出发是否能够被找到")]),s._v(" "),a("li",[s._v("JS中的根就是全局变量对象")])]),s._v(" "),a("p",[s._v("JS中的引用与可达:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zlss'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// { name: 'zlss' } 可达，因为被根obj引用了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ali "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ali引用obj")]),s._v("\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个时候，虽然obj为null了，但是ali依旧引用了{ name: 'zlss' }，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为obj和ali保存的都是{ name: 'zlss' }的地址")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"常见gc算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见gc算法"}},[s._v("#")]),s._v(" 常见GC算法")]),s._v(" "),a("p",[s._v("GC就是垃圾回收机制的简写，可以帮忙找到内存中的垃圾并释放和回收空间。GC是一种机制，垃圾回收器完成具体的操作，工作的内容就是查找垃圾释放空间、回收空间。算法就是工作时查找和回收所遵循的规则。")]),s._v(" "),a("h3",{attrs:{id:"引用计数算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数算法"}},[s._v("#")]),s._v(" 引用计数算法")]),s._v(" "),a("p",[s._v("核心思想：设置引用数，判断当前引用数是否为0，为0则判断为垃圾，进行回收。")]),s._v(" "),a("p",[s._v("优点：")]),s._v(" "),a("ul",[a("li",[s._v("可以及时回收垃圾对象")]),s._v(" "),a("li",[s._v("最大程度减少程序卡顿时间")])]),s._v(" "),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("无法回收循环引用的对象")]),s._v(" "),a("li",[s._v("时间开销大，资源消耗大（要维护引用数，时刻监控引用数的更改）")])]),s._v(" "),a("h3",{attrs:{id:"标记清除算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除算法"}},[s._v("#")]),s._v(" 标记清除算法")]),s._v(" "),a("p",[s._v("核心思想：分标记和清除两个阶段完成。最后回收相应的空间。")]),s._v(" "),a("ul",[a("li",[s._v("标记阶段：遍历所有对象找标记活动对象（可达对象）")]),s._v(" "),a("li",[s._v("清除阶段：遍历所有对象清除没有标记对象")])]),s._v(" "),a("p",[s._v("优点：可以解决对象循环引用的问题。")]),s._v(" "),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("地址不连续的话，容易产生碎片化空间，浪费空间资源。")]),s._v(" "),a("li",[s._v("不会立即回收垃圾对象。")])]),s._v(" "),a("h3",{attrs:{id:"标记整理算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记整理算法"}},[s._v("#")]),s._v(" 标记整理算法")]),s._v(" "),a("p",[s._v("标记整理可以看做是标记清除的增强。标记阶段的操作和标记清除算法一样，清除阶段会先执行整理，移动对象位置，让它们在地址上产生连续，最大化利用清除出来的内存空间。")]),s._v(" "),a("ul",[a("li",[s._v("优点：减少碎片化空间。")]),s._v(" "),a("li",[s._v("缺点：不会立即回收垃圾对象。")])]),s._v(" "),a("h2",{attrs:{id:"v8垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8垃圾回收"}},[s._v("#")]),s._v(" V8垃圾回收")]),s._v(" "),a("p",[s._v("V8是一款主流的JS执行引擎。V8采用即时编译。V8内存设限。")]),s._v(" "),a("p",[s._v("V8垃圾回收策略：采用分代回收的思想，将内存分为新生代存储区、老生代存储区。\n针对不同对象采用不同算法。\nV8中常用GC算法：分代回收、空间复制、标记清除、标记整理、标记增量。")]),s._v(" "),a("h3",{attrs:{id:"v8内存分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8内存分配"}},[s._v("#")]),s._v(" V8内存分配")]),s._v(" "),a("p",[s._v("V8内存空间一分为二，小空间用于存储新生代对象(32M|16M)，新生代指的是存活时间较短的对象。大空间用于存储老生代对象(1.4G|700M)，老生代指的是存活时间较长的对象。")]),s._v(" "),a("p",[s._v("存活时间较短的对象：当前代码内有局部作用域，局部作用域内的变量在代码执行完后肯定要回收。而全局作用域里的变量要等全部代码执行完后才会回收。")]),s._v(" "),a("p",[s._v("存活时间较长的对象：全局作用域下存在的变量，还有闭包里存放的数据。")]),s._v(" "),a("h3",{attrs:{id:"如何回收新生代对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何回收新生代对象"}},[s._v("#")]),s._v(" 如何回收新生代对象")]),s._v(" "),a("p",[s._v("新生代对象存放在左侧新生代区域。新生代区域存在内存大小的限制，64位操作系统32M，32位操作系统16M。")]),s._v(" "),a("p",[a("strong",[s._v("回收过程采用复制算法+标记整理")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("新生代内存区分为两个等大小空间，即使用空间From和空闲空间To。")]),s._v(" "),a("li",[s._v("活动对象存储于From空间，标记整理后将活动对象拷贝到To空间。")]),s._v(" "),a("li",[s._v("From与To交换空间完成释放。")])]),s._v(" "),a("p",[s._v("拷贝过程中可能出现晋升，晋升就是将新生代对象移动到老生代，一轮GC还存活的新生代需要晋升。\n如果拷贝过程中发现To空间的使用率超过25%，则也需要移动到老生代。")]),s._v(" "),a("h3",{attrs:{id:"如何回收老生代对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何回收老生代对象"}},[s._v("#")]),s._v(" 如何回收老生代对象")]),s._v(" "),a("p",[s._v("老生代对象存放在右侧老生代区域。老生代区域存在内存大小的限制，64位操作系统1.4G，32位操作系统700M。")]),s._v(" "),a("p",[a("strong",[s._v("回收过程采用标记清除+标记整理+增量标记算法")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("首先是用标记清除算法完成垃圾空间的回收。")]),s._v(" "),a("li",[s._v("采用标记整理进行空间优化。因为可能需要将新生代对象移动到老生代，出现空间不足的情况，就需要标记整理。")]),s._v(" "),a("li",[s._v("采用增量标记进行效率优化。它将标记和清除过程分为多个阶段，在每个阶段中都会停顿一小段时间，以允许程序继续执行。在V8中，增量标记算法可以减少垃圾回收对程序执行的影响，提高程序的响应速度。")])]),s._v(" "),a("h3",{attrs:{id:"细节对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#细节对比"}},[s._v("#")]),s._v(" 细节对比")]),s._v(" "),a("ul",[a("li",[s._v("新生代区域垃圾回收使用空间换时间。")]),s._v(" "),a("li",[s._v("老生代区域垃圾回收不适合复制算法，因为空间比较大，而且存储的对象数据比较多，复制起来时间开销比较，也会浪费很大的空间。")])]),s._v(" "),a("h2",{attrs:{id:"performance工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance工具"}},[s._v("#")]),s._v(" Performance工具")]),s._v(" "),a("p",[s._v("GC的目的是为了实现内存空间的良性循环。Performance提供多种监控内存的方式。")]),s._v(" "),a("p",[s._v("Performance使用步骤：")]),s._v(" "),a("ul",[a("li",[s._v("打开浏览器输入目标地址")]),s._v(" "),a("li",[s._v("进入开发人员工具面板，选择性能")]),s._v(" "),a("li",[s._v("开启录制功能，访问具体页面")]),s._v(" "),a("li",[s._v("执行用户行为，一段时间后停止录制")]),s._v(" "),a("li",[s._v("分析界面中记录的内存信息")])]),s._v(" "),a("p",[s._v("内存问题的体现：")]),s._v(" "),a("ul",[a("li",[s._v("页面出现延迟加载或者经常性暂停")]),s._v(" "),a("li",[s._v("页面持续性出现糟糕的性能")]),s._v(" "),a("li",[s._v("页面的性能随时间延长越来越差")])]),s._v(" "),a("h3",{attrs:{id:"监控内存的几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监控内存的几种方式"}},[s._v("#")]),s._v(" 监控内存的几种方式")]),s._v(" "),a("p",[s._v("内存问题一般分为3种情况，内存泄露、内存膨胀、内存频繁GC。")]),s._v(" "),a("ul",[a("li",[s._v("内存泄露：内存使用持续升高。")]),s._v(" "),a("li",[s._v("内存膨胀：在多数设备上都存在性能问题。")]),s._v(" "),a("li",[s._v("内存频繁GC：通过内存变化图进行分析。")])]),s._v(" "),a("p",[s._v("监控内存的几种方式：")]),s._v(" "),a("ul",[a("li",[s._v("浏览器任务管理器")]),s._v(" "),a("li",[s._v("Timeline时序图记录")]),s._v(" "),a("li",[s._v("堆快照查找分离DOM")])]),s._v(" "),a("h4",{attrs:{id:"浏览器任务管理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器任务管理器"}},[s._v("#")]),s._v(" 浏览器任务管理器")]),s._v(" "),a("p",[s._v("Shift+ESC调出浏览器任务管理器，内存占用空间是指原生内存，一般创建dom的时候会占用内存，JavaScript内存是所有可达对象占用的内存。\n"),a("img",{attrs:{src:"/blog/images/javascript-high-2.png",alt:"image"}})]),s._v(" "),a("h4",{attrs:{id:"timeline时序图记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timeline时序图记录"}},[s._v("#")]),s._v(" Timeline时序图记录")]),s._v(" "),a("p",[s._v("Performance，蓝色线")]),s._v(" "),a("h4",{attrs:{id:"堆快照查找分离dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆快照查找分离dom"}},[s._v("#")]),s._v(" 堆快照查找分离DOM")]),s._v(" "),a("p",[s._v("界面元素本应存活在DOM树上。分离DOM：垃圾对象时的DOM节点、分离状态的DOM节点。分离DOM会造成空间浪费。分离DOM在页面里不存在，但确实会占用内存。")]),s._v(" "),a("p",[s._v("F12面板，内存-》堆快照，输入deta，查找分离DOM")]),s._v(" "),a("h4",{attrs:{id:"判断是否存在频繁gc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是否存在频繁gc"}},[s._v("#")]),s._v(" 判断是否存在频繁GC")]),s._v(" "),a("p",[s._v("GC工作时应用程序是停止的，频繁且过长的GC会导致应用假死，用户使用中感知应用卡顿。")]),s._v(" "),a("ul",[a("li",[s._v("Timeline中频繁地上升下降")]),s._v(" "),a("li",[s._v("任务管理器中数据频繁地增加减小")])]),s._v(" "),a("h2",{attrs:{id:"v8引擎执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎执行流程"}},[s._v("#")]),s._v(" V8引擎执行流程")]),s._v(" "),a("p",[s._v("JS代码执行引擎分为V8和非V8两大类。V8引擎本身是一个应用程序，是JS的执行环境，用来解析和编译JS代码，内部也有很多子模块。V8引擎只是浏览器渲染引擎里的一个JS执行代码的组成部分。\n"),a("img",{attrs:{src:"/blog/images/javascript-high-3.png",alt:"image"}})]),s._v(" "),a("h3",{attrs:{id:"scanner-词法分析生成token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scanner-词法分析生成token"}},[s._v("#")]),s._v(" Scanner 词法分析生成token")]),s._v(" "),a("p",[s._v("Scanner是一个扫描器，对纯文本代码进行"),a("strong",[s._v("词法分析")]),s._v("，也叫分词(tokenize)，把代码分析成不同的tokens。所谓token，指的是语法上不可能再分的、最小的单个字符或字符串。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" usename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'alishi'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("经过Scanner的扫描，会得到一个token的集合。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Keyword"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"const"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Identifier"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Punctuator"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"="')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"alishi"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"parser-语法分析生成ast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parser-语法分析生成ast"}},[s._v("#")]),s._v(" Parser 语法分析生成AST")]),s._v(" "),a("p",[s._v("Parser是一个解析器，又称为"),a("strong",[s._v("语法分析")]),s._v("，其作用是将上一步生成的 token 数据，根据语法规则转为 AST。如果源码符合语法规则，这一步就会顺利完成。但如果源码存在语法错误，这一步就会终止，并抛出一个“语法错误”。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" func1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" fun2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("fun2是全量解析，而fun1是预解析。因为fun1不会真正执行。")]),s._v(" "),a("p",[s._v("预解析优点：")]),s._v(" "),a("ul",[a("li",[s._v("跳过未被使用的代码")]),s._v(" "),a("li",[s._v("不生成AST，创建无变量引用和声明的scopes")]),s._v(" "),a("li",[s._v("依据规范抛出特定错误")]),s._v(" "),a("li",[s._v("解析速度更快")])]),s._v(" "),a("p",[s._v("全量解析：")]),s._v(" "),a("ul",[a("li",[s._v("解析被使用的代码")]),s._v(" "),a("li",[s._v("生成AST")]),s._v(" "),a("li",[s._v("构建具体scopes信息，变量引用、声明等")]),s._v(" "),a("li",[s._v("抛出所有语法错误")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明时未调用，因此会被认为是不被执行的代码，进行预解析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明时未调用，因此会被认为是不被执行的代码，进行预解析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数立即执行，只进行一个全量解析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行foo，那么需要重新对foo进行全量解析，此时foo函数被解析了两次")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("你可以结合下面这段代码来直观地感受下什么是 AST：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" myName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 极客时间 "')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nmyName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"geektime"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这段代码经过JavaScript-AST站点处理后，生成的 AST 结构如下：\n"),a("img",{attrs:{src:"/blog/images/javascript-high-5.png",alt:"image"}})]),s._v(" "),a("h3",{attrs:{id:"ignition-生成字节码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignition-生成字节码"}},[s._v("#")]),s._v(" Ignition 生成字节码")]),s._v(" "),a("p",[s._v("Ignition 是V8提供的一个解释器，把上一步生成的抽象语法树AST转成字节码，同时还会收集编译阶段所需要的一些信息，并解释执行字节码。")]),s._v(" "),a("p",[s._v("其实一开始 V8 并没有字节码，而是直接将 AST 转换为机器码，由于执行机器码的效率是非常高效的，所以这种方式在发布后的一段时间内运行效果是非常好的。但是随着 Chrome 在手机上的广泛普及，特别是运行在 512M 内存的手机上，内存占用问题也暴露出来了，因为 V8 需要消耗大量的内存来存放转换后的机器码。为了解决内存占用问题，V8 团队大幅重构了引擎架构，引入字节码，并且抛弃了之前的编译器，最终花了将进四年的时间，实现了现在的这套架构。")]),s._v(" "),a("p",[s._v("那什么是字节码呢？为什么引入字节码就能解决内存占用问题呢？")]),s._v(" "),a("p",[s._v("字节码就是介于 AST 和机器码之间的一种代码。但是与特定类型的机器码无关，字节码需要通过解释器将其转换为机器码后才能执行。")]),s._v(" "),a("p",[s._v("理解了什么是字节码，我们再来对比下高级代码、字节码和机器码，你可以参考下图：\n"),a("img",{attrs:{src:"/blog/images/javascript-high-4.png",alt:"image"}})]),s._v(" "),a("p",[s._v("从图中可以看出，机器码所占用的空间远远超过了字节码，所以使用字节码可以减少系统的内存使用。")]),s._v(" "),a("h3",{attrs:{id:"turbofan-转成机器码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#turbofan-转成机器码"}},[s._v("#")]),s._v(" TurboFan 转成机器码")]),s._v(" "),a("p",[s._v("TurboFan是V8提供的编译器模块，利用上一环节收集到的信息，将字节码转化为具体的机器码（汇编代码），之后就可以开始代码执行了。")]),s._v(" "),a("h2",{attrs:{id:"堆栈处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆栈处理"}},[s._v("#")]),s._v(" 堆栈处理")]),s._v(" "),a("ul",[a("li",[s._v("ECStack：执行环境栈")]),s._v(" "),a("li",[s._v("ECG：全局执行上下文")]),s._v(" "),a("li",[s._v("VOG：全局变量对象")]),s._v(" "),a("li",[s._v("GO：全局对象")])]),s._v(" "),a("p",[s._v("JS代码执行肯定需要一个环境，也就是V8引擎，代码最终被解析成可以执行的机器码，这些机器码在"),a("strong",[s._v("执行环境栈")]),s._v("执行。但是不能把所有的代码都放在"),a("strong",[s._v("执行环境栈")]),s._v("里执行，所以需要"),a("strong",[s._v("执行上下文")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("执行上下文")]),s._v("用于隔离全局作用域的变量和局部作用域的变量，**全局执行上下文(ECG)**用于管理全局的代码执行，"),a("strong",[s._v("私有执行上下文")]),s._v("管理局部的代码。")]),s._v(" "),a("p",[s._v("在"),a("strong",[s._v("全局执行上下文")]),s._v("里存在很多变量声明，这些变量声明存在VOG全局变量对象里，存好后就可以进栈执行了。\n"),a("img",{attrs:{src:"/blog/images/javascript-high-6.png",alt:"image"}})]),s._v(" "),a("p",[s._v("GO：全局对象，也是一个对象，因此它也会有一个内存的空间地址，用于存放window变量下的API。")]),s._v(" "),a("h3",{attrs:{id:"引用类型堆栈处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用类型堆栈处理"}},[s._v("#")]),s._v(" 引用类型堆栈处理")]),s._v(" "),a("p",[s._v("将对象赋值給一个变量，其实是将对象的地址赋值給了这个变量。")]),s._v(" "),a("ul",[a("li",[s._v("案例1")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建{ x: 100 }对象，会开辟堆内存，然后将这个对象的地址赋值給了obj1，obj1保存的是地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj1  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将地址再赋值給obj2，这样obj1和obj2都指向了{ x: 100 }")]),s._v("\nobj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 修改obj2的x属性，实际上是改了{ x: 100 }，变成了{ x: 200 }")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 200")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"/blog/images/javascript-high-7.png",alt:"image"}})]),s._v(" "),a("ul",[a("li",[s._v("案例2")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建{ x: 100 }对象，会开辟堆内存，然后将这个对象的地址赋值給了obj1，obj1保存的是地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj1  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将地址再赋值給obj2，这样obj1和obj2都指向了{ x: 100 }")]),s._v("\nobj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zls'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建{ name: 'zls' }对象，会再开辟堆内存，然后将这个对象的地址赋值給了obj2，obj2保存的是{ name: 'zls' }的地址，这样obj2就指向{ name: 'zls' }了。")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 100")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("案例3")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj1\nobj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// { x: 100, y: { x: 200 } }")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("图里面的"),a("code",[s._v("var a=b=1")]),s._v("是错的，正确的是下面的：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等价于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nb"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"/blog/images/javascript-high-8.png",alt:"image"}})]),s._v(" "),a("p",[s._v("将"),a("code",[s._v("obj1.y = obj1 = {x:200}")]),s._v("拆解为")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("  obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先执行，因为.y的优先级高")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("  obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("1.的时候我们在0x000中新增一个y，指向一块新的内存空间0x001，里面放上x: 200。")]),s._v(" "),a("p",[s._v("2.直接把obj1指向的0x000空间，改成了0x001空间。")]),s._v(" "),a("p",[s._v("同样obj1.y会显示undefined的原因也得到解释，因为obj1指向的空间里面，不存在obj1.y。")]),s._v(" "),a("p",[s._v("而obj2指向的还是我们的0x000空间。0x000空间里面，x:100，y呢指向的是0x001里面是x:200。")]),s._v(" "),a("p",[s._v("上述代码等价于")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj1\nobj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nobj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// { x: 100, y: { x: 200 } }")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("函数内的 var a = b = 1")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Uncaught ReferenceError: a is not defined    因为a是局部变量")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1 ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("等价于")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a是局部变量")]),s._v("\n    b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// b没有使用var定义，变成了全局变量，所以外面能打印出来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Uncaught ReferenceError: a is not defined    因为a是局部变量")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1 ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"函数堆栈处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数堆栈处理"}},[s._v("#")]),s._v(" 函数堆栈处理")]),s._v(" "),a("h3",{attrs:{id:"闭包堆栈处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包堆栈处理"}},[s._v("#")]),s._v(" 闭包堆栈处理")])])}),[],!1,null,null,null);t.default=r.exports}}]);